{"ast":null,"code":"var _jsxFileName = \"/Users/joshschenkein/Documents/coding/revenue3/frontend/frontend/src/components/Modal.js\";\nimport React, { Component } from \"react\";\nimport { Button, Modal, ModalHeader, ModalBody, ModalFooter, Form, FormGroup, Input, Label } from \"reactstrap\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default class CustomModal extends Component {\n  constructor(props) {\n    super(props);\n    this.handleChange = e => {\n      let {\n        name,\n        value\n      } = e.target;\n      if (e.target.type === \"checkbox\") {\n        value = e.target.checked;\n      }\n      const activeItem = {\n        ...this.state.activeItem,\n        [name]: value\n      };\n      this.setState({\n        activeItem\n      });\n    };\n    this.state = {\n      activeItem: this.props.activeItem,\n      todoList: this.props.todoList,\n      edit: false\n    };\n  }\n  render() {\n    const {\n      toggle,\n      onSave\n    } = this.props;\n    return /*#__PURE__*/_jsxDEV(Modal, {\n      isOpen: true,\n      toggle: toggle,\n      children: [/*#__PURE__*/_jsxDEV(ModalHeader, {\n        toggle: toggle,\n        children: \"Todo Item\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(ModalBody, {\n        children: /*#__PURE__*/_jsxDEV(Form, {\n          children: [/*#__PURE__*/_jsxDEV(FormGroup, {\n            children: [/*#__PURE__*/_jsxDEV(Label, {\n              for: \"todo-title\",\n              children: \"Title\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 45,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(Input, {\n              type: \"text\",\n              id: \"todo-title\",\n              name: \"title\",\n              value: this.state.activeItem.title,\n              onChange: this.handleChange,\n              placeholder: \"Enter Todo Title\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 46,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 44,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(FormGroup, {\n            children: [/*#__PURE__*/_jsxDEV(Label, {\n              for: \"todo-description\",\n              children: \"Description\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 56,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(Input, {\n              type: \"text\",\n              id: \"todo-description\",\n              name: \"description\",\n              value: this.state.activeItem.description,\n              onChange: this.handleChange,\n              placeholder: \"Enter Todo description\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 57,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 55,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(FormGroup, {\n            check: true,\n            children: /*#__PURE__*/_jsxDEV(Label, {\n              check: true,\n              children: [/*#__PURE__*/_jsxDEV(Input, {\n                type: \"checkbox\",\n                name: \"completed\",\n                checked: this.state.activeItem.completed,\n                onChange: this.handleChange\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 68,\n                columnNumber: 33\n              }, this), \"Completed\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 67,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 66,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(ModalFooter, {\n        children: /*#__PURE__*/_jsxDEV(Button, {\n          color: \"Success\",\n          onClick: () => onSave(this.state.activeItem),\n          children: \"Save\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 13\n    }, this);\n  }\n}","map":{"version":3,"names":["React","Component","Button","Modal","ModalHeader","ModalBody","ModalFooter","Form","FormGroup","Input","Label","jsxDEV","_jsxDEV","CustomModal","constructor","props","handleChange","e","name","value","target","type","checked","activeItem","state","setState","todoList","edit","render","toggle","onSave","isOpen","children","fileName","_jsxFileName","lineNumber","columnNumber","for","id","title","onChange","placeholder","description","check","completed","color","onClick"],"sources":["/Users/joshschenkein/Documents/coding/revenue3/frontend/frontend/src/components/Modal.js"],"sourcesContent":["import React, { Component } from \"react\";\nimport {\n    Button,\n    Modal,\n    ModalHeader,\n    ModalBody,\n    ModalFooter,\n    Form,\n    FormGroup,\n    Input,\n    Label,\n} from \"reactstrap\";\n\nexport default class CustomModal extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            activeItem: this.props.activeItem,\n            todoList: this.props.todoList,\n            edit: false,\n        };\n    };\n\n    handleChange = (e) => {\n        let { name,value } = e.target;\n        \n        if (e.target.type === \"checkbox\"){\n            value = e.target.checked;\n        }\n\n        const activeItem = { ...this.state.activeItem, [name]: value};\n\n        this.setState({ activeItem });\n    };\n\n    render(){\n        const { toggle, onSave } = this.props;\n\n        return (\n            <Modal isOpen={true} toggle={toggle}>\n                <ModalHeader toggle={toggle}>Todo Item</ModalHeader>\n                <ModalBody>\n                    <Form>\n                        <FormGroup>\n                            <Label for=\"todo-title\">Title</Label>\n                            <Input\n                            type=\"text\"\n                            id=\"todo-title\"\n                            name=\"title\"\n                            value={this.state.activeItem.title}\n                            onChange={this.handleChange}\n                            placeholder=\"Enter Todo Title\"\n                            />\n                        </FormGroup>\n                        <FormGroup>\n                            <Label for=\"todo-description\">Description</Label>\n                            <Input\n                                type=\"text\"\n                                id=\"todo-description\"\n                                name=\"description\"\n                                value={this.state.activeItem.description}\n                                onChange={this.handleChange}\n                                placeholder=\"Enter Todo description\"\n                            />\n                        </FormGroup>\n                        <FormGroup check>\n                            <Label check>\n                                <Input\n                                    type=\"checkbox\"\n                                    name=\"completed\"\n                                    checked={this.state.activeItem.completed}\n                                    onChange={this.handleChange}\n                                />\n                                Completed \n                            </Label>\n                        </FormGroup>\n                    </Form>\n                </ModalBody>\n                <ModalFooter>\n                    <Button\n                        color=\"Success\"\n                        onClick={() => onSave(this.state.activeItem)}\n                        >Save</Button>\n                </ModalFooter>\n            </Modal>\n        )\n    }\n\n}"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}